# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Status(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, total: int=None, current: int=None, message: str=None):  # noqa: E501
        """Status - a model defined in Swagger

        :param total: The total of this Status.  # noqa: E501
        :type total: int
        :param current: The current of this Status.  # noqa: E501
        :type current: int
        :param message: The message of this Status.  # noqa: E501
        :type message: str
        """
        self.swagger_types = {
            'total': int,
            'current': int,
            'message': str
        }

        self.attribute_map = {
            'total': 'total',
            'current': 'current',
            'message': 'message'
        }

        self._total = total
        self._current = current
        self._message = message

    @classmethod
    def from_dict(cls, dikt) -> 'Status':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Status of this Status.  # noqa: E501
        :rtype: Status
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total(self) -> int:
        """Gets the total of this Status.


        :return: The total of this Status.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total: int):
        """Sets the total of this Status.


        :param total: The total of this Status.
        :type total: int
        """

        self._total = total

    @property
    def current(self) -> int:
        """Gets the current of this Status.


        :return: The current of this Status.
        :rtype: int
        """
        return self._current

    @current.setter
    def current(self, current: int):
        """Sets the current of this Status.


        :param current: The current of this Status.
        :type current: int
        """

        self._current = current

    @property
    def message(self) -> str:
        """Gets the message of this Status.


        :return: The message of this Status.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this Status.


        :param message: The message of this Status.
        :type message: str
        """

        self._message = message
